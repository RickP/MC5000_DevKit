# This is a basic workflow to help you get started with Actions

name: Build_App

# Controls when the action will run.
on:
  # Triggers the workflow on tagging a version
  push:
    tags:
        - "v*"


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install Qt
        uses: jurplel/install-qt-action@v2.12.2

      - name: compile & package
        run: |
          cd gui
          qmake
          make
		      wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          QML_SOURCES_PATHS=. linuxdeploy --plugin qt --appdir AppDir -d imagebuilder/
          appimagetool AppDir
        shell: bash
	
      - name: release			
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          title: "GUI for Linux - amd64"
          files: |
            gui/*.AppImage

  build_windows:
    # The type of runner that the job will run on
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install Qt
        uses: jurplel/install-qt-action@v2.12.2
        with:
          arch: 'win64_mingw81'

      - name: compile
        run: |
          call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cd gui
          qmake
          make
		      windeployqt --qmldir . MC5000-GUI.exe
        shell: cmd
		
      - name: pack
      - uses: papeloto/action-zip@v1
	        with:
	          files: gui/MC5000-GUI/
	          dest: MC5000-GUI_Windows_amd64.zip
            
      - name: release			
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          title: "GUI for Windows - amd64"
          files: |
            MC5000-GUI_Windows_amd64.zip
