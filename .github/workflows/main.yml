name: Build_App

on:
  push:
    tags:
      - v*

jobs:
  
  once:
      name: Create GitHub release
      runs-on: ubuntu-latest
      outputs:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
      steps:
        - name: Create a release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            draft: true
            prerelease: true
  
  build_linux:
    runs-on: ubuntu-18.04
    needs: once
    steps:
      - uses: actions/checkout@v2
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.12.2
      - name: Install dependencies
        run: |
          sudo apt-get install -y libxcb* patchelf libgl1-mesa-dev
          cd gui
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod 755 linuxdeploy-x86_64.AppImage
          wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
          chmod 755 linuxdeploy-plugin-qt-x86_64.AppImage
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod 755 appimagetool-x86_64.AppImage
        shell: bash
      - name: compile
        run: |
          cd gui
          qmake
          make
        shell: bash
      - name: package 
        run: |
          cd gui
          QML_SOURCES_PATHS=. ./linuxdeploy-x86_64.AppImage --plugin qt --appdir AppDir -d imagebuilder/MC5000.desktop -e MC5000-GUI -i icons/icon.png
          ./appimagetool-x86_64.AppImage AppDir
          mv MC5000-GUI-x86_64.AppImage MC5000-GUI_Linux_x86_64.AppImage
        shell: bash
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: gui/MC5000-GUI_Linux_x86_64.AppImage
          asset_name: MC5000-GUI_Linux_x86_64.AppImage
          asset_content_type: application/octet-stream

  build_windows:
    runs-on: windows-2019
    needs: once
    steps:
      - uses: actions/checkout@v2
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.12.2
        with:
          arch: win64_mingw81
      - name: compile
        run: |
          call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cd gui
          qmake
          make
          windeployqt --qmldir . release/MC5000-GUI.exe
          rename release MC5000-GUI
        shell: cmd
      - name: pack
        uses: papeloto/action-zip@v1
        with:
          files: gui/MC5000-GUI/
          dest: MC5000-GUI_Windows_x86_64.zip
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: MC5000-GUI_Windows_x86_64.zip
          asset_name: MC5000-GUI_Windows_x86_64.zip
          asset_content_type: application/octet-stream